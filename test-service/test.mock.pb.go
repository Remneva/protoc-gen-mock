// Code generated by protoc-gen-mock. DO NOT EDIT.

package test_service

import (
	context "context"
	grpchandler "github.com/carvalhorr/protoc-gen-mock/grpchandler"
	stub "github.com/carvalhorr/protoc-gen-mock/stub"
	grpc "google.golang.org/grpc"
	reflect "reflect"
)

func NewTestProtobufMockService(stubsMatcher stub.StubsMatcher) grpchandler.MockService {
	return &testProtobufMockService{
		StubsMatcher: stubsMatcher,
	}
}

// TestProtobufMockService is the server API for TestProtobuf service.
type testProtobufMockService struct {
	TestProtobufServer
	StubsMatcher stub.StubsMatcher
}

func (mock *testProtobufMockService) Register(s *grpc.Server) {
	s.RegisterService(&_TestProtobuf_MockServiceDesc, TestProtobufServer(mock))
}

func (mock *testProtobufMockService) GetSupportedMethods() []string {
	return []string{
		"/carvalhorr.proto.test.TestProtobuf/GetProtoTest",
	}
}

func (mock *testProtobufMockService) GetPayloadExamples() []stub.Stub {
	return []stub.Stub{
		{
			FullMethod: "/carvalhorr.proto.test.TestProtobuf/GetProtoTest",
			Request: &stub.StubRequest{
				Match:    "exact | partial",
				Content:  stub.JsonString(stub.CreateStubExample(new(Request))),
				Metadata: make(map[string]string, 0),
			},
			Response: &stub.StubResponse{
				Type:    "success | error",
				Content: stub.JsonString(stub.CreateStubExample(new(Response))),
			},
		},
	}
}

func (mock *testProtobufMockService) GetStubsValidator() stub.StubsValidator {
	return mock
}

func (mock *testProtobufMockService) IsValid(s *stub.Stub) (isValid bool, errorMessages []string) {
	switch s.FullMethod {
	case "/carvalhorr.proto.test.TestProtobuf/GetProtoTest":
		return stub.IsStubValid(s, reflect.TypeOf(Request{}), reflect.TypeOf(Response{}))
	default:
		return true, nil
	}
}

var _TestProtobuf_MockServiceDesc = grpc.ServiceDesc{
	ServiceName: "carvalhorr.proto.test.TestProtobuf",
	HandlerType: (*TestProtobufServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProtoTest",
			Handler:    _TestProtobuf_GetProtoTest_MockHandler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test.proto",
}

func _TestProtobuf_GetProtoTest_MockHandler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	out := new(Response)
	fullMethod := "/carvalhorr.proto.test.TestProtobuf/GetProtoTest"
	stubsMatcher := (srv).(*testProtobufMockService).StubsMatcher
	return grpchandler.MockHandler(ctx, stubsMatcher, fullMethod, in, out)
}
